version: '3'

services:

  api:
    build: ./api
    container_name: api
    depends_on:
      - db
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=development
      - PORT=3000
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./api:/opt/api:rw
#      - /opt/api/node_modules
    command: yarn run start


  db:
    container_name: db
    image: postgres:9.6.3-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=-E UTF8 --locale=fi_FI.UTF8
    ports:
      - "127.0.0.1:5432:5432"
    read_only: true
    restart: always
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - db-data:/var/lib/postgresql/data


  # Nginx as a reverse proxy for api and web
#  proxy:
#    container_name: proxy
#    image: nginx:1.13.1-alpine
#    tmpfs:
#      - /var/cache/nginx
#      - /var/log/nginx
#      - /var/run
#    depends_on:
#      - api
#    ports:
#      - "8080:80"
#      - "8443:443"
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
#      - ./nginx/proxy-params.conf:/etc/nginx/proxy-params.conf:ro

volumes:
  db-data:
